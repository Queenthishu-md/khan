const { cmd, commands } = require('../command');
const os = require("os");
const { runtime } = require('../lib/functions');

cmd({
    pattern: "alive",
    alias: ["status", "runtime", "uptime"],
    desc: "Check uptime and system status",
    category: "main",
    react: "üë®‚Äçüíª",
    filename: __filename
},
async (conn, mek, m, { from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply }) => {
    try {
        // Generate system status message
        const status = `
‚ï≠‚îÅ‚îÅ„Äî ùó§ùò∂ùò¶ùò¶ùòØ‚Çì* ```THISHU``` *-ùó†ùóó V1.0*„Äï‚îÅ‚îÅ‚îà‚ä∑
‚îÉ‚óà‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ¬∑‡πè
‚îÉ‚óà‚î£‚îÅ‚ùØ‚ùØ *‚è≥Uptime*:  ${runtime(process.uptime())} 
‚îÉ‚óà‚î£‚îÅ‚ùØ‚ùØ *üìü Ram usage*: ${(process.memoryUsage().heapUsed / 1024 / 1024).toFixed(2)}MB / ${(os.totalmem() / 1024 / 1024).toFixed(2)}MB
‚îÉ‚óà‚î£‚îÅ‚ùØ‚ùØ *‚öôÔ∏è HostName*: ${os.hostname()}
‚îÉ‚óà‚î£‚îÅ‚ùØ‚ùØ *üë®‚Äçüíª Owner*: ùóû‰∏®Âá†·é∂ ·ó™‰πá·êØ‰∏®„Ñ•üëëüòà
‚îÉ‚óà‚î£‚îÅ‚ùØ‚ùØ *üß¨ Version*: 1.0.0
‚îÉ‚óà‚î£‚îÅ‚ùØ‚ùØ ùêà ùêÄùêå ùêåùêÑùêåùêÅùêÑùêë ùêéùêÖ ùêäùêàùêçùêÜùêÉùêéùêå ùêéùêÖ ùêÉùêÑùêïùêàùêã
‚îÉ‚óà‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
> ¬© ·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è Q·¥ú·¥á·¥á…¥ ·¥õ ú…™Íú± ú·¥ú ·¥õ·¥á·¥Ä·¥çüßö‚Äç‚ôÇÔ∏è
`;

        // Send the status message with an image
        await conn.sendMessage(from, { 
            image: { url: `https://ibb.co/mrKXJ2mL` },  // Image URL
            caption: status,
            contextInfo: {
                mentionedJid: [m.sender],
                forwardingScore: 999,
                isForwarded: true,
                forwardedNewsletterMessageInfo: {
                    newsletterJid: '120363416414262287@newsletter',
                    newsletterName: 'QUEEN THISHU-MD',
                    serverMessageId: 143
                }
            }
        }, { quoted: mek });

    } catch (e) {
        console.error("Error in alive command:", e);
        reply(`An error occurred: ${e.message}`);
    }
});

//120363416414262287@newsletter